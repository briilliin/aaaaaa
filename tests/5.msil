.assembly program
{
}
.class public Program
{
  .field public static float64 _gv0
  .method public static float64 sqrt(float64 x) cil managed
  {
    .locals init (float64 _v0, float64 _v1, float64 _v2)
    ldarg 0
    ldc.i4 0
    conv.r8
    clt
    brfalse L_0
    ldc.i4 -1
    conv.r8
    ret
    br L_1
  L_0:
  L_1:
    ldc.i4 1
    conv.r8
    stloc 0
    ldarg 0
    stloc 1
    ldarg 0
    ldc.i4 1
    conv.r8
    clt
    brfalse L_2
    ldc.i4 0
    conv.r8
    stloc 0
    ldc.i4 1
    conv.r8
    stloc 1
    br L_3
  L_2:
  L_3:
  L_4:
    ldloc 1
    ldloc 0
    sub
    ldsfld float64 Program::_gv0
    cgt
    brfalse L_7
    ldloc 0
    ldloc 1
    add
    ldc.i4 2
    conv.r8
    div
    stloc 2
    ldloc 2
    ldloc 2
    mul
    ldarg 0
    cgt
    brfalse L_5
    ldloc 2
    stloc 1
    br L_6
  L_5:
    ldloc 2
    stloc 0
  L_6:
    br L_4
  L_7:
    ldloc 0
    ldloc 1
    add
    ldc.i4 2
    conv.r8
    div
    ret
  }
  
  .method public static void Main()
  {
    .entrypoint
    ldc.r8 1e-09
    stsfld float64 Program::_gv0
    ldc.i4 2
    conv.r8
    call float64 class Program::sqrt(float64)
    call string class CompilerDemo.Runtime::convert(float64)
    call void class CompilerDemo.Runtime::println(string)
    ret
  }
}
